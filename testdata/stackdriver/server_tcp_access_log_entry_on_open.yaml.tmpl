labels:
  destination_principal: "{{ .Vars.DestinationPrincipal }}"
  destination_service_host: server.default.svc.cluster.local
  destination_service_name: server
  response_flag: "-"
  service_authentication_policy: {{ .Vars.ServiceAuthenticationPolicy }}
  {{- if .Vars.SourceUnknownOnOpen }}
  source_name: ""
  {{- else }}
  source_name: productpage-v1-84975bc778-pxz2w
  {{- end }}
  {{- if .Vars.SourceUnknownOnOpen }}
  source_namespace: ""
  {{- else }}
  source_namespace: default
  {{- end }}
  source_principal: "{{ .Vars.SourcePrincipal }}"
  {{- if .Vars.SourceUnknownOnOpen }}
  source_workload: ""
  {{- else }}
  source_workload: productpage-v1
  {{- end }}
  {{- if .Vars.SourceUnknownOnOpen }}
  # Don't log canonical stuff.
  {{- else }}
  source_app: productpage
  source_canonical_service: productpage-v1
  source_canonical_revision: version-1
  source_version: v1
  {{- end }}
  destination_ip: "127.0.0.1:{{ .Ports.ServerPort }}"
  protocol: tcp
  connection_state: "OPEN"
  log_sampled: "false"
  upstream_cluster: "inbound|9080|tcp|server.default.svc.cluster.local"
  requested_server_name: "server.com"
  {{- if .Vars.RbacDryRun }}
  dry_run_result: "AuthzDenied"
  dry_run_policy_name: "foo.tcp-dryrun-deny"
  dry_run_policy_rule: "0"
  {{- end }}
severity: INFO
{{- if .Vars.SourceUnknownOnOpen }}
text_payload: " --> ratings"
{{- else }}
text_payload: "productpage-v1 --> ratings"
{{- end }}
